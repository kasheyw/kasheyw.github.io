<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>工作记录</title>
    <link href="/2022/06/29/2022-06-29%20%E5%B7%A5%E4%BD%9C%E8%AE%B0%E5%BD%95%20%E4%B8%A5%E8%87%AA%E5%BC%BA/"/>
    <url>/2022/06/29/2022-06-29%20%E5%B7%A5%E4%BD%9C%E8%AE%B0%E5%BD%95%20%E4%B8%A5%E8%87%AA%E5%BC%BA/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="工作记录"><a href="#工作记录" class="headerlink" title="工作记录"></a>工作记录</h1><h3 id="1-公司培训的考核"><a href="#1-公司培训的考核" class="headerlink" title="1.公司培训的考核"></a>1.公司培训的考核</h3><h3 id="2-Source-Insight使用问题"><a href="#2-Source-Insight使用问题" class="headerlink" title="2.Source Insight使用问题"></a>2.Source Insight使用问题</h3><p><a href="https://www.cnblogs.com/hmy-666/p/15702955.html">解决拉取推送报错</a></p><h3 id="3-使用字符型打印整形变量"><a href="#3-使用字符型打印整形变量" class="headerlink" title="3.使用字符型打印整形变量"></a>3.使用字符型打印整形变量</h3><figure><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;using namespace std;int main()&#123;int a &#x3D;12;printf(&quot;print:%d&quot;,a);printf(&quot;print:%s&quot;,a);return 0;&#125;&#x2F;&#x2F;%s为打印字符串的占位符，由于字符串有终止符\0，当用%s打印整形时，由于没有终止符，会导致打印出错。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="4-服务器配置工具"><a href="#4-服务器配置工具" class="headerlink" title="4.服务器配置工具"></a>4.服务器配置工具</h3><h4 id="4-1QT4-1-2安装"><a href="#4-1QT4-1-2安装" class="headerlink" title="4.1QT4.1.2安装"></a>4.1QT4.1.2安装</h4>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>工作记录</title>
    <link href="/2022/06/28/2022-06-28-%E5%B7%A5%E4%BD%9C%E8%AE%B0%E5%BD%95%20%E4%B8%A5%E8%87%AA%E5%BC%BA/"/>
    <url>/2022/06/28/2022-06-28-%E5%B7%A5%E4%BD%9C%E8%AE%B0%E5%BD%95%20%E4%B8%A5%E8%87%AA%E5%BC%BA/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="工作记录"><a href="#工作记录" class="headerlink" title="工作记录"></a>工作记录</h1><h3 id="1-完成了开发环境的安装"><a href="#1-完成了开发环境的安装" class="headerlink" title="1.完成了开发环境的安装"></a>1.完成了开发环境的安装</h3><ul><li>Visual Studio 2019</li></ul><blockquote><ul><li>内存擦除模块</li><li>Linux远程调试模块</li></ul></blockquote><ul><li>TortoiseGit</li><li>Xshell</li><li>WinSCP</li><li>Source Insight</li><li>navicat</li></ul><h3 id="2-TortoiseGit的使用"><a href="#2-TortoiseGit的使用" class="headerlink" title="2.TortoiseGit的使用"></a>2.TortoiseGit的使用</h3><p><em>TortoiseGit提供了人性化的图形化界面，不用像Git一样输入许多语句，可视化操作界面有助于提高效率。</em></p><p><a href="https://blog.csdn.net/hailongcsdn/article/details/106399635">一篇基本操作的参考</a></p><h3 id="3-Source-Insight安装、破解、汉化"><a href="#3-Source-Insight安装、破解、汉化" class="headerlink" title="3. Source Insight安装、破解、汉化"></a>3. Source Insight安装、破解、汉化</h3><p><a href="https://blog.csdn.net/xiaochenXIHUA/article/details/125324558">Source Insight的安装与使用</a></p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>后端的书籍资料</title>
    <link href="/2022/06/17/C++%E5%90%8E%E7%AB%AF%E7%9A%84%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/"/>
    <url>/2022/06/17/C++%E5%90%8E%E7%AB%AF%E7%9A%84%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="C-后端的书籍资料"><a href="#C-后端的书籍资料" class="headerlink" title="C++后端的书籍资料"></a>C++后端的书籍资料</h1><h2 id="1-C语言"><a href="#1-C语言" class="headerlink" title="1.C语言"></a>1.C语言</h2><ul><li><p><input disabled type="checkbox">  C Primer Plus</p></li><li><p><input disabled type="checkbox">  C和指针</p></li><li><p><input disabled type="checkbox">  C专家编程</p></li></ul><h2 id="2-C"><a href="#2-C" class="headerlink" title="2.C++"></a>2.C++</h2><ul><li><p><input disabled type="checkbox">  视频课</p></li><li><p><input disabled type="checkbox">  C Primer Plus</p></li></ul><h2 id="3-基础四大件"><a href="#3-基础四大件" class="headerlink" title="3.基础四大件"></a>3.基础四大件</h2><ul><li><p>数据结构：</p><ul><li><input disabled type="checkbox"> 大话数据结构</li><li><input disabled type="checkbox"> 剑指Offer</li><li><input disabled type="checkbox"> 刷题</li></ul></li><li><p>计算机网络</p><ul><li><input disabled type="checkbox"> TCP/IP详解</li></ul></li><li><p>操作系统</p><ul><li><input disabled type="checkbox"> 深入理解操作系统</li></ul></li><li><p>设计模式</p><ul><li><input disabled type="checkbox"> 大话设计模式</li></ul></li></ul><h2 id="4-Linux"><a href="#4-Linux" class="headerlink" title="4.Linux"></a>4.Linux</h2><ul><li><input disabled type="checkbox"> Linux就该这么学</li></ul><h2 id="5-编译调试工具"><a href="#5-编译调试工具" class="headerlink" title="5.编译调试工具"></a>5.编译调试工具</h2><ul><li><input disabled type="checkbox"> GCC和GDB的官方文档</li><li><input disabled type="checkbox"> debugging with gdb</li><li><input disabled type="checkbox"> 跟我一起写makefile</li></ul><h2 id="6-Linux环境编程"><a href="#6-Linux环境编程" class="headerlink" title="6.Linux环境编程"></a>6.Linux环境编程</h2><ul><li><input disabled type="checkbox"> Unix环境高级编程</li><li><input disabled type="checkbox"> Linux高性能服务器编程</li><li><input disabled type="checkbox"> POSIX多线程程序设计</li></ul>]]></content>
    
    
    <categories>
      
      <category>资料整理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>服务器开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>对博客进行的一些优化</title>
    <link href="/2022/06/16/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/06/16/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="对博客进行的一些优化"><a href="#对博客进行的一些优化" class="headerlink" title="对博客进行的一些优化"></a>对博客进行的一些优化</h1><p>最近完成了Hexo博客的搭建，并更换了Fluid主题，但仍觉得博客过于简陋，需要进行一些美化，于是给博客加装了以下的各种插件。</p><hr><h2 id="1-emoji支持"><a href="#1-emoji支持" class="headerlink" title="1.emoji支持"></a>1.emoji支持</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><hr><h2 id="2-2D互动角色"><a href="#2-2D互动角色" class="headerlink" title="2.2D互动角色"></a>2.2D互动角色</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>查看作者提供的<a href="https://huaji8.top/post/live2d-plugin-2.0/">演示动画</a>，来挑选自己喜欢的角色吧</p><blockquote><p>可安装的角色有以下这么多：</p><blockquote><p>live2d-widget-model-chitose<br>live2d-widget-model-epsilon2_1<br>live2d-widget-model-gf<br>live2d-widget-model-haru/01 (use npm install –save live2d-widget-model-haru)<br>live2d-widget-model-haru/02 (use npm install –save live2d-widget-model-haru)<br>live2d-widget-model-haruto<br>live2d-widget-model-hibiki<br>live2d-widget-model-hijiki<br>live2d-widget-model-izumi<br>live2d-widget-model-koharu<br>live2d-widget-model-miku<br>live2d-widget-model-ni-j<br>live2d-widget-model-nico<br>live2d-widget-model-nietzsche<br>live2d-widget-model-nipsilon<br>live2d-widget-model-nito<br>live2d-widget-model-shizuku<br>live2d-widget-model-tororo<br>live2d-widget-model-tsumiki<br>live2d-widget-model-unitychan<br>live2d-widget-model-wanko<br>live2d-widget-model-z16</p></blockquote></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#安装一个角色</span><span class="token function">npm</span> <span class="token function">install</span> live2d-widget-model-hijiki<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>配置角色的信息：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#在Hexo的配置文件中进行配置：</span>live2d:  enable: <span class="token boolean">true</span>  scriptFrom: <span class="token builtin class-name">local</span>  pluginRootPath: live2dw/  pluginJsPath: lib/  pluginModelPath: assets/  tagMode: <span class="token boolean">false</span>  debug: <span class="token boolean">false</span>  model:  use: live2d-widget-model-hijiki  display: <span class="token boolean">true</span>  position: right  width: <span class="token number">150</span>  height: <span class="token number">300</span>  mobile:  show: <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><hr><h2 id="3-音乐"><a href="#3-音乐" class="headerlink" title="3.音乐"></a>3.音乐</h2><h3 id="3-1-嵌入页面的音乐播放器"><a href="#3-1-嵌入页面的音乐播放器" class="headerlink" title="3.1.嵌入页面的音乐播放器"></a>3.1.嵌入页面的音乐播放器</h3><p>由<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">hexo-tag-aplayer</a>插件实现。hexo-tag-aplayer 就是将 APlayer 内嵌入博客页面的 Hexo 插件。</p><p><a href="https://github.com/metowolf/MetingJS">MetingJS</a> 是基于<a href="https://github.com/metowolf/Meting">Meting API</a> 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。因此要使用Meting需要在hexo配置文件中将其开启。</p><p>hexo-tag-aplayer的安装与配置流程：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#安装hexo-tag-aplayer插件</span><span class="token function">npm</span> <span class="token function">install</span> --save hexo-tag-aplayer<span class="token comment">#由于音乐播放器是嵌入页面的，因此单独用一个页面来显示音乐播放器</span><span class="token comment">#添加播放页面</span>hexo new page playlist<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important">#这时候在 /Hexo/source 文件夹下会生成一个playlist文件夹，打开里面的index.md，修改如下：<span class="token punctuation">---</span></span>title: 歌单date: 2019-02-21 16:14:00<span class="token title important">type: "playlist"<span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#Hexo配置中开启meting</span><span class="token key atrule">aplayer</span><span class="token punctuation">:</span>  <span class="token key atrule">meting</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">aplayerInject</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">per_pag</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#打开【主题】的配置文件，在主菜单Menu中添加跳转到播放器页面的菜单项</span><span class="token punctuation">-</span> <span class="token punctuation">&#123;</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">"playlist"</span><span class="token punctuation">,</span> <span class="token key atrule">link</span><span class="token punctuation">:</span> <span class="token string">"playlist"</span><span class="token punctuation">,</span> <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">"iconfont icon-music"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>这时候菜单项已经添加了，但是会显示为英文的，需要对齐进行汉化</p><figure><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#在\node_modules\hexo-theme-fluid\languages中添加中文翻译</span><span class="token comment">#zh-CN文件中添加</span><span class="token key atrule">playlist</span><span class="token punctuation">:</span>  <span class="token key atrule">menu</span><span class="token punctuation">:</span> <span class="token string">'音乐'</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'音乐'</span>  <span class="token key atrule">subtitle</span><span class="token punctuation">:</span> <span class="token string">'歌单'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>回到playlist页面，在index.html中的正文部分添加歌单信息，来自定义播放列表</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#首先去获取一个歌单链接</span><span class="token comment">#例如链接：https://music.163.com/#/playlist?id=5164943310&amp;userid=1552363386</span><span class="token comment">#可以提取出：id：5164943310，</span><span class="token comment">#这里使用的是网易的歌单，因此填写netease，腾讯则填写tencent</span><span class="token comment">#于是就获得了歌单信息：</span><span class="token punctuation">&#123;</span>% meting <span class="token string">"5164943310"</span> <span class="token string">"netease"</span> <span class="token string">"playlist"</span> <span class="token string">"theme:#FF4081"</span> <span class="token string">"mode:circulation"</span> <span class="token string">"mutex:true"</span> <span class="token string">"listmaxheight:340px"</span> <span class="token string">"preload:auto"</span> %<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>至此，播放器页面完成。</p><hr><h3 id="3-2悬浮挂底的音乐播放器（支持切换页面时不中断播放）"><a href="#3-2悬浮挂底的音乐播放器（支持切换页面时不中断播放）" class="headerlink" title="3.2悬浮挂底的音乐播放器（支持切换页面时不中断播放）"></a>3.2悬浮挂底的音乐播放器（支持切换页面时不中断播放）</h3><p>这个播放器的方案为：使用<mark>aplayer</mark>+<mark>meting.js</mark>生成固定在底部的外链播放器，使用<mark>pjax</mark>进行页面路由切换的管理。</p><p><a href="https://link.juejin.cn/?target=https://aplayer.js.org/%23/zh-Hans/">Aplayer官方文档</a>、<a href="https://link.juejin.cn/?target=https://github.com/metowolf/MetingJS/tree/v1.2">MetingJS官方文档</a>、<a href="https://link.juejin.cn/?target=http://bsify.admui.com/jquery-pjax/">jquery-pjax文档</a>。</p><ul><li><p>安装Aplayer播放器（不带pjax）</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#安装Aplayer插件</span><span class="token comment">#注意和上文的hexo-tag-aplayer有所不同</span><span class="token function">npm</span> <span class="token function">install</span> aplayer --save  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>在 你的博客目录/node_modules/hexo-theme-fluid/layout/layout.ejs中添加播放器的代码，即将播放器插入到页面里</p><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 引用Aplayer样式 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 引用Aplayer --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 引入metingjs --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 页面中插入播放器，通过data-id来更换歌单 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my-aplayer<span class="token punctuation">"</span></span><span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aplayer<span class="token punctuation">"</span></span> <span class="token attr-name">data-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5164943310<span class="token punctuation">"</span></span> <span class="token attr-name">data-server</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>netease<span class="token punctuation">"</span></span> <span class="token attr-name">data-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>playlist<span class="token punctuation">"</span></span> <span class="token attr-name">data-fixed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">data-autoplay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">data-order</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span> <span class="token attr-name">data-volume</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">data-theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#cc543a<span class="token punctuation">"</span></span> <span class="token attr-name">data-preload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span> <span class="token attr-name">data-mutex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token attr-name">data-loop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>all<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>至此，播放器安装完成，但当前仍存在一个问题，在切换页面的时候歌曲插件也会同时被刷新，就导致放到一半的音乐又从头开始了。于是下文将介绍如何通过pjax实现HTML页面的局部刷新，保证音乐插件不被刷新。</p></li><li><p>pjax的使用</p><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">#这里，为了能保证播放器在页面切换时不刷新，于是将要刷新的部分，和不刷新的部分分别放在不同的div容器中。    ...    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pageContent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--这里放需要刷新的页面的HTML--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!------------------------------------------------------------------------></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aplayerContent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--这里放音乐播放器(不需要刷新的页面的HTML)--></span>><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>随后，通过pjax来对页面的请求进行处理，只刷新需要刷新的页面。</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pjax</span><span class="token punctuation">(</span><span class="token string">'a[target!=_blank]'</span><span class="token punctuation">,</span> <span class="token string">'#pageContent'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">fragment</span><span class="token operator">:</span> <span class="token string">'#pageContent'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>下面是一段将代码放入对应容器的演示：</p></li></ul><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#通过上面的逻辑，将播放器放入需要刷新的部分：</span>    <span class="token punctuation">..</span>.    <span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"https://cdn.bootcss.com/jquery.pjax/2.0.1/jquery.pjax.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"https://cdn.staticfile.org/jquery/3.1.1/jquery.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token variable"><span class="token variable">$(</span>document<span class="token variable">)</span></span>.pjax<span class="token punctuation">(</span><span class="token string">'a[target!=_blank]'</span>, <span class="token string">'#pageContent'</span>, <span class="token punctuation">&#123;</span>fragment: <span class="token string">'#pageContent'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token assign-left variable">id</span><span class="token operator">=</span><span class="token string">"pageContent"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span>--这里放需要刷新的页面的HTML--<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span>--这里放需要刷新的页面的HTML--<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span>--这里放需要刷新的页面的HTML--<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span>--这里放需要刷新的页面的HTML--<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span>--这里放需要刷新的页面的HTML--<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span>--这里放需要刷新的页面的HTML--<span class="token operator">></span>    <span class="token operator">&lt;</span>/div<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token assign-left variable">id</span><span class="token operator">=</span><span class="token string">"aplayerContent"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span>--这里放音乐播放器（不需要刷新的页面的HTML）--<span class="token operator">></span>        <span class="token operator">&lt;</span>link <span class="token assign-left variable">rel</span><span class="token operator">=</span><span class="token string">"stylesheet"</span> <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>        <span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token assign-left variable">id</span><span class="token operator">=</span><span class="token string">"my-aplayer"</span>            <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"aplayer"</span>             data-id<span class="token operator">=</span><span class="token string">"5164943310"</span>             data-server<span class="token operator">=</span><span class="token string">"netease"</span>             data-type<span class="token operator">=</span><span class="token string">"playlist"</span>             data-fixed<span class="token operator">=</span><span class="token string">"true"</span>             data-autoplay<span class="token operator">=</span><span class="token string">"true"</span>             data-order<span class="token operator">=</span><span class="token string">"list"</span>             data-volume<span class="token operator">=</span><span class="token string">"1"</span>             data-theme<span class="token operator">=</span><span class="token string">"#cc543a"</span>             data-preload<span class="token operator">=</span><span class="token string">"auto"</span>             data-mutex<span class="token operator">=</span><span class="token string">"true"</span>            data-loop<span class="token operator">=</span><span class="token string">"all"</span><span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span>    <span class="token operator">&lt;</span>/div<span class="token operator">></span>    <span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>至此进行页面切换时，音乐会继续正常播放。</p><p>但是！使用<code>pjax</code>托管页面后产生了一些问题，因为页面不刷新，所以切换页面后有一些原来会执行的<code>javascript</code>代码不会再执行，另外一些监听事件也出了问题。（暂时注释了<code>pjax</code>操作）</p><ul><li>解决方法：把这些事件纳入<code>pjax</code>管理，在<code>pjax</code>执行完后添加相应的回调函数即可。</li></ul><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'pjax:complete'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 需要做的操作 </span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p><a href="https://www.jianshu.com/p/b5ccf130f2ac">一个案例</a></p><hr><h2 id="4-点击文字特效"><a href="#4-点击文字特效" class="headerlink" title="4.点击文字特效"></a>4.点击文字特效</h2><h3 id="在-blog-node-modules-hexo-theme-fluid-source-js中创建特效的js文件。"><a href="#在-blog-node-modules-hexo-theme-fluid-source-js中创建特效的js文件。" class="headerlink" title="在./blog/node_modules/hexo-theme-fluid/source/js中创建特效的js文件。"></a>在./blog/node_modules/hexo-theme-fluid/source/js中创建特效的js文件。</h3><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> a_idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">jQuery</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">$</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span>        <span class="token punctuation">(</span><span class="token string">"喵~"</span><span class="token punctuation">,</span> <span class="token string">"💖"</span><span class="token punctuation">,</span><span class="token string">"💌"</span><span class="token punctuation">,</span><span class="token string">"🍀"</span><span class="token punctuation">,</span><span class="token string">"🍓"</span><span class="token punctuation">,</span><span class="token string">"🍒"</span><span class="token punctuation">,</span><span class="token string">"🥕"</span><span class="token punctuation">,</span><span class="token string">"💐"</span><span class="token punctuation">,</span><span class="token string">"🌸"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> $i <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;span/>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>a_idx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a_idx <span class="token operator">=</span> <span class="token punctuation">(</span>a_idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">var</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX<span class="token punctuation">,</span>        y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY<span class="token punctuation">;</span>        <span class="token comment">//设置样式</span>        $i<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token string-property property">"z-index"</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>            <span class="token string-property property">"top"</span><span class="token operator">:</span> y <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">,</span>            <span class="token string-property property">"left"</span><span class="token operator">:</span> x<span class="token punctuation">,</span>            <span class="token string-property property">"position"</span><span class="token operator">:</span> <span class="token string">"absolute"</span><span class="token punctuation">,</span>            <span class="token string-property property">"font-weight"</span><span class="token operator">:</span> <span class="token string">"bold"</span><span class="token punctuation">,</span>            <span class="token string-property property">"font-size"</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>            <span class="token string-property property">"color"</span><span class="token operator">:</span> <span class="token string">"#000000"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>$i<span class="token punctuation">)</span><span class="token punctuation">;</span>        $i<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token string-property property">"top"</span><span class="token operator">:</span> y <span class="token operator">-</span> <span class="token number">180</span><span class="token punctuation">,</span>            <span class="token string-property property">"opacity"</span><span class="token operator">:</span> <span class="token number">0</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token comment">//文字移动的速度</span>            <span class="token number">1000</span><span class="token punctuation">,</span>            <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                $i<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">'delay()'</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".buryit"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">"onclick"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="在-blog-node-modules-hexo-theme-fluid-layout-layout-ejs末尾引入js"><a href="#在-blog-node-modules-hexo-theme-fluid-layout-layout-ejs末尾引入js" class="headerlink" title="在./blog/node_modules/hexo-theme-fluid/layout/layout.ejs末尾引入js"></a>在./blog/node_modules/hexo-theme-fluid/layout/layout.ejs末尾引入js</h3><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--单击显示文字--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/click_show_text.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><hr><h2 id="5-打字机效果"><a href="#5-打字机效果" class="headerlink" title="5.打字机效果"></a>5.打字机效果</h2><p>安装了新的打字机效果，代替Hexo自带的打字机。Hexo自带的打字机删除动画的速度没法调，瞬间就删除了，效果很差。</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> typed.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>隐藏端口号，将Hexo的端口号设置为默认的80端口。修改地址为：<code>vim /home/blog/node_modules/hexo-server/index.js </code></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HEXO搭建静态博客</title>
    <link href="/2022/06/14/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/06/14/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>常用的静态博客框架：</p><ul><li>HEXO</li><li>Jekyll</li><li>VuePress</li><li>HUgo</li></ul><h1 id="使用HEXO搭建的静态博客"><a href="#使用HEXO搭建的静态博客" class="headerlink" title="使用HEXO搭建的静态博客"></a>使用HEXO搭建的静态博客</h1><h2 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h2><p>HEXO是需要NodeJs支持的，因此需要先安装NodeJs。</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /home/nodejs<span class="token builtin class-name">cd</span> /home/nodejs/<span class="token comment">#下载</span><span class="token function">wget</span> https://nodejs.org/dist/v16.13.2/node-v16.13.2-linux-x64.tar.xz<span class="token comment">#解压</span><span class="token function">tar</span> -vxf node-v16.13.2-linux-x64.tar.xz<span class="token comment">#创建软链接</span><span class="token builtin class-name">cd</span> /home/nodejs/node-v16.13.2-linux-x64/bin<span class="token function">ln</span> -s /home/nodejs/node-v16.13.2-linux-x64/bin/node /usr/local/bin/node<span class="token function">ln</span> -s /home/nodejs/node-v16.13.2-linux-x64/bin/npm /usr/local/bin/npm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>这时查看node版本会报错：<code>-bash: xxx: command not found</code></p><p>需要将 node 添加进系统环境变量</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#备份</span><span class="token function">cp</span> /etc/profile /home/nodejs<span class="token function">vim</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>末尾添加：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># nodejs</span><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/home/nodejs/node-v16.13.2-linux-x64/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>重新加载配置</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> /etc/profile<span class="token function">node</span> -v<span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>至此NodeJs安装完成。</p><p><img src="/images/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/node.png"></p><hr><h2 id="2-使用npm安装HEXO"><a href="#2-使用npm安装HEXO" class="headerlink" title="2.使用npm安装HEXO"></a>2.使用npm安装HEXO</h2><p>由于国内镜像源速度很慢，先使用npm安装cnpm(淘宝的镜像源)。</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org<span class="token comment">#使用cnpm全局安装hexo</span>cnpm <span class="token function">install</span> -g hexo-clihexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>至此HEXO安装完成。</p><p><img src="/images/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/hexo.png"></p><hr><h2 id="3-使用HEXO生成博客"><a href="#3-使用HEXO生成博客" class="headerlink" title="3.使用HEXO生成博客"></a>3.使用HEXO生成博客</h2><p>创建博客的文件夹，在文件夹中初始化博客。</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /home/blog<span class="token comment">#初始化</span>hexo init<span class="token comment">#启动</span>hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>至此博客已经启动了，可以通过服务器的IP地址来对博客进行访问了。</p><p>创建一篇博客并编辑</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo n <span class="token string">"测试文章"</span><span class="token comment">#编辑博客</span><span class="token function">vim</span> /home/blog/source/_posts/测试文章.md<span class="token comment">#重启博客</span><span class="token comment">#清除</span>hexo clean<span class="token comment">#生成</span>hexo g<span class="token comment">#启动</span>hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><img src="/images/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/myblog.png"></p><h2 id="4-将博客部署到远端"><a href="#4-将博客部署到远端" class="headerlink" title="4.将博客部署到远端"></a>4.将博客部署到远端</h2><p>使用Git提供的免费平台来部署博客</p><p>首先在git上创建一个仓库，名字一定要设置为<mark style="color：green">自己的用户名</mark>+<mark style="color：green">github.io</mark>。</p><p>设置配置文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> _config.yml <span class="token comment">#行末写：</span>type: <span class="token function">git</span>repo: 你的git仓库的地址branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><mark>注意，冒号后面有一个空格！</mark></p><p>若使用HTTP协议不成功，换成SSH试试。</p><p>创建好后回到控制台，安装git插件</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> --save hexo-deployer-git<span class="token comment">#部署到远端</span>hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>此时通过<code>https://你的用户名.github.com</code>访问博客了</p><p>如果显示404，在git仓库的seting中，到Page设置页面，Change theme选择一个主题。</p><p><img src="/images/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/theme.jpg"></p><h2 id="5-插入图片"><a href="#5-插入图片" class="headerlink" title="5.插入图片"></a>5.插入图片</h2><p>sourse为博客的资源文件夹，在sourse目录下创建images文件夹，用来存放资源图片（images必须是这个名称否则无效）</p><p>将图片显示出来</p><img src="/images/test.png" width="50%"><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">![](/images/test.png)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/images/test.png<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>50%</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="6-更换主题"><a href="#6-更换主题" class="headerlink" title="6.更换主题"></a>6.更换主题</h2><p>Hexo默认的主题为landscape,可以从一些<a href="%22https://hexo.io/themes/%22">主题网站</a>“)中获取并更换想要的主题。</p><p>更换主题的方式一般主题网页会给出，大致分为两步：下载主题，修改配置文件。</p><p><a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97">Fluid主题的配置指南</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
